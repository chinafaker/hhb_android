apply plugin: 'com.android.application'

android {
    compileSdkVersion 26
    defaultConfig {
        applicationId "com.daikin.rqm"
        minSdkVersion 14
        targetSdkVersion 24
        versionCode 100
        versionName "1.0.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        vectorDrawables.useSupportLibrary = true
        multiDexEnabled true
    }


    signingConfigs {
        config {
            keyAlias 'android.keystore'
            keyPassword 'android'
            storeFile file('./android.keystore')
            storePassword 'android'
            v2SigningEnabled false
        }
    }

//    release   正式版    dev 开发版  debug  测试版
    buildTypes {
        release {
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-project.txt'
            buildConfigField 'String', 'SERVER_URL', getReleaseUrl()
            resValue "string", "appversion_type", versionRelease()
            signingConfig signingConfigs.config
        }

        dev {
            buildConfigField 'String', 'SERVER_URL', getDev()
            resValue "string", "appversion_type", versionDev()
            matchingFallbacks = ['dev', 'debug', 'release']
            signingConfig signingConfigs.config
        }

        debug {
            buildConfigField 'String', 'SERVER_URL', getDebug()
            resValue "string", "appversion_type", versionDebug()
            signingConfig signingConfigs.config
        }
    }
    // 23 之后的api移除了apache http相关类
    useLibrary 'org.apache.http.legacy'
    //修改生成的文件
    android.applicationVariants.all { variant ->
        variant.outputs.all {
            def formattedDate = new Date().format('yyyyMMdd')
            if (variant.buildType.name == "release") {
                //输出apk名称改为RQM_101_20180104_release.apk
                outputFileName = "RQM_${defaultConfig.versionName}_${formattedDate}_release.apk"
            } else if (variant.buildType.name == "debug") {
                //输出apk名称改为RQM_101_20180104_test.apk
                outputFileName = "RQM_${defaultConfig.versionName}_${formattedDate}_test.apk"
            } else if (variant.buildType.name == "dev") {
                //输出apk名称改为RQM_101_20180104_dev.apk
                outputFileName = "RQM_${defaultConfig.versionName}_${formattedDate}_dev.apk"
            }
        }
    }
}

//正式版接口IP：203.211.246.51:8080
//开发版本接口IP：121.40.150.64:8080
//测试版本接口IP：203.211.246.55:5000

//正式版接口
static def getReleaseUrl() {
    "\"http://service.daikin.com\""
}
//开发版本接口
static def getDev() {
    "\"http://121.40.150.64:8080\""
}
//测试版本接口
static def getDebug() {
    "\"http://203.211.246.55:5000\""

}

//正式版
def versionRelease() {
    return ""
}
//开发版
def versionDev() {
    return "DEV"
}

//测试版
def versionDebug() {
    return "TEST"
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation 'com.android.support:appcompat-v7:26.1.0'
    implementation 'com.android.support:design:26.1.0'
    implementation 'com.android.support.constraint:constraint-layout:1.0.2'
    implementation 'com.android.support:support-vector-drawable:26.1.0'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.1'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.1'
    compile 'com.android.support:percent:26.1.0'
    compile 'com.android.support:multidex:1.0.1'
    compile('com.jakewharton:butterknife:8.8.1') {
        exclude module: 'support-compat'
    }
    annotationProcessor 'com.jakewharton:butterknife-compiler:8.8.1'
    compile 'com.mcxiaoke.volley:library:1.0.19'
    compile 'org.greenrobot:eventbus:3.0.0'
    compile 'com.github.bumptech.glide:glide:4.3.0'
    compile 'com.github.CymChad:BaseRecyclerViewAdapterHelper:2.9.33'
    implementation project(':library')
}
